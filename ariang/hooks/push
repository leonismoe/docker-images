#!/bin/bash

set -xe

. $PWD/.env.local

export DOCKER_CLI_EXPERIMENTAL=enabled

MANIFESTS=''

ARCH_ALL=$(cat <<EOT
linux/386
linux/amd64
linux/arm
linux/arm/v5
linux/arm/v6
linux/arm/v7
linux/arm64
linux/ppc64le
linux/mips
linux/mipsle
linux/mips64
linux/mips64le
linux/riscv64
linux/s390x
EOT
)

echo "$ARCH_ALL" | while IFS= read -r line; do
  arch=$(echo $line | cut -d/ -f2)

  docker push $DOCKER_REPO:$arch-$VERSION

  # update `$ARCH-latest`
  if [ "$VERSION" = "$LATEST_VERSION" ]; then
    docker tag $DOCKER_REPO:$arch-$VERSION $DOCKER_REPO:$arch-latest
    docker push $DOCKER_REPO:$arch-latest
    docker rmi $DOCKER_REPO:$arch-latest > /dev/null
  fi

  docker rmi $DOCKER_REPO:$arch-$VERSION > /dev/null

  # create manifest list cache
  # `docker manifest` does not support `linux/mips` and `linux/mipsle`
  # see https://github.com/docker/cli/blob/88c6089300a82d3373892adf6845a4fed1a4ba8d/cli/command/manifest/util.go#L22
  if [ "$arch" != "mips" ] && [ "$arch" != "mipsle" ]; then
    MANIFESTS="$MANIFESTS $DOCKER_REPO:$arch-$VERSION"
  fi
done


# create manifest for current version
docker manifest create $DOCKER_REPO:$VERSION $MANIFESTS

echo "$ARCH_ALL" | while IFS= read -r line; do
  os=$(echo $line | cut -d/ -f1)
  arch=$(echo $line | cut -d/ -f2)
  variant=$(echo $line | cut -d/ -f3)

  if [ "$arch" != "mips" ] && [ "$arch" != "mipsle" ]; then
    extra_opts="--os $os --arch $arch"
    if [ ! -z "$variant" ]; then
      extra_opts="$extra_opts --variant $variant"
    fi
    docker manifest annotate $DOCKER_REPO:$VERSION $DOCKER_REPO:$arch-$VERSION $extra_opts
  fi
done

docker manifest push $DOCKER_REPO:$VERSION

if docker manifest --help | grep -q '\brm\b'; then
  docker manifest rm $DOCKER_REPO:$VERSION
fi


# update `latest` if needed
if [ "$VERSION" = "$LATEST_VERSION" ]; then
  docker manifest create $DOCKER_REPO:latest $MANIFESTS

  echo "$ARCH_ALL" | while IFS= read -r line; do
    os=$(echo $line | cut -d/ -f1)
    arch=$(echo $line | cut -d/ -f2)
    variant=$(echo $line | cut -d/ -f3)

    if [ "$arch" != "mips" ] && [ "$arch" != "mipsle" ]; then
      extra_opts="--os $os --arch $arch"
      if [ ! -z "$variant" ]; then
        extra_opts="$extra_opts --variant $variant"
      fi
      docker manifest annotate $DOCKER_REPO:latest $DOCKER_REPO:$arch-latest $extra_opts
    fi
  done

  docker manifest push $DOCKER_REPO:latest

  if docker manifest --help | grep -q '\brm\b'; then
    docker manifest rm $DOCKER_REPO:latest
  fi
fi
