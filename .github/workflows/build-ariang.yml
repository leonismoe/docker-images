name: Build AriaNg

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'target AriaNg version'
        required: false
        default: ''

env:
  VERSION: ${{ github.event.inputs.version }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log into DockerHub
        if: ${{ github.event_name != 'pull_request' && github.actor == env.DOCKERHUB_USERNAME }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log into GitHub Packages
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ariang
        env:
          DOCKER_REPO: "${{ github.actor }}/ariang"
        working-directory: ariang
        run: |
          ./hooks/build

          export DOCKER_REPO="ghcr.io/$DOCKER_REPO"
          ./hooks/build

      - name: Extract version
        working-directory: ariang
        run: |
          . .env.local
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Push to DockerHub
        if: ${{ github.event_name != 'pull_request' && github.actor == env.DOCKERHUB_USERNAME }}
        working-directory: ariang
        run: |
          export DOCKER_REPO="${{ github.actor }}/ariang"
          ./hooks/push

      - name: Push to GitHub Packages
        if: ${{ github.event_name != 'pull_request' }}
        working-directory: ariang
        run: |
          export DOCKER_REPO="ghcr.io/${{ github.actor }}/ariang"
          ./hooks/push

      - name: Cleanup
        run: |
          if [ ! -z "$(docker images -q -f 'reference=${{ github.actor }}/ariang*')" ]; then
            docker rmi $(docker images -q -f 'reference=${{ github.actor }}/ariang*')
          fi
          docker image prune -f
